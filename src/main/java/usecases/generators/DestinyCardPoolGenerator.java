package usecases.generators;

import entities.Destiny;
import entities.DestinyCard;

import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;

/**
 * The CardPoolGenerator class is responsible for generating a pool of destiny cards
 * that can be used within the Destiny block.
 * Destiny cards are used in a game to determine various outcomes and events.
 * This generator allows adding cards to the pool.
 * The DestinyBlock can later extend its card pool with the cards generated by this generator.
 */
public class DestinyCardPoolGenerator {

    /**
     * This regular expression is used for splitting CSV (Comma-Separated Values) strings while
     * preserving commas inside content enclosed within double quotes.
     * The DELIMITER constant represents the regex pattern for splitting the CSV string into tokens.
     * It matches a comma (`,`), but only if it is followed by an even number of double quotes
     * (meaning the comma is not within double quotes) until the end of the line.
     * This allows CSV content enclosed within double quotes to be treated as a single token.
     * Example:
     * Input CSV String: "John,Doe","New York, NY",25
     * Resulting Tokens: "John,Doe", "New York, NY", 25
     */
    static final String DELIMITER = ",(?=([^\"]*\"[^\"]*\")*[^\"]*$)";

    /**
     * Generate the destiny card pool based on the information file.
     * This method reads the specified information file containing destiny card data in CSV format.
     * Each line in the file represents a single destiny card with its associated actions.
     * The destiny cards are created and added to the card pool, which is then added to the given Destiny instance.
     * Destiny cards are used in the game to determine various outcomes and events.
     *
     * @param fileName The name of the information file containing destiny card data.
     * @param destiny  The Destiny instance to which the generated card pool will be added.
     */
    public static void generateDestinyCardPool(String fileName, Destiny destiny){
        if (destiny == null) {
            throw new NullPointerException("The Destiny instance must not be null.");
        }

        ArrayList<DestinyCard> cardPool = new ArrayList<>();
        try (BufferedReader br = new BufferedReader(new FileReader(fileName))){
            String line;
            ArrayList<Object> actions = new ArrayList<>(Arrays.asList(0, 0, 0));
            while ((line = br.readLine()) != null){
                String[] values = line.split(DELIMITER);

                if (values.length < 4) {
                    // Handle the case where there are missing values in the CSV line
                    throw new IllegalArgumentException("Invalid data in the CSV file: " + line);
                }

                // Generate the actions
                try {
                    actions.set(0, Integer.parseInt(values[1]));
                    actions.set(1, Integer.parseInt(values[2]));
                    actions.set(2, Integer.parseInt(values[3]));
                } catch (NumberFormatException e) {
                    // Handle the case where action values are not in the expected numeric format
                    throw new NumberFormatException("Invalid action value in the CSV file: " + line);
                }

                // Remove the "" in the content
                String message = values[0].replace("\"", "");

                DestinyCard card = new DestinyCard(message, actions);
                cardPool.add(card);
            }

            // Add the generated destiny card pool to the Destiny instance
            destiny.addDestinyCardPool(cardPool);

        } catch (FileNotFoundException e) {
            System.err.println("The specified file '" + fileName + "' does not exist or cannot be found.");
        } catch (IOException e) {
            System.err.println("Error occurred while reading the file: " + e.getMessage());
        }

    }

}
